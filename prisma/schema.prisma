// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DELIVERY_MAN
}

model User {
  id       String   @id @default(uuid())
  name     String
  cpf      String   @unique
  password String
  role     UserRole @default(DELIVERY_MAN)
  orders   Order[]

  @@map("users")
}

model Recipient {
  id         String  @id @default(uuid())
  name       String
  email      String  @unique
  street     String
  complement String?
  number     Int
  city       String
  state      String
  zipCode    String
  orders     Order[]

  @@map("recipients")
}

enum OrderStatus {
  PENDING
  WITHDRAWN
  DELIVERED
  RETURNED
}

model Order {
  id            String      @id @default(uuid())
  code          String
  status        OrderStatus
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime?   @updatedAt @map("updated_at")
  recipientId   String      @map("recipient_at")
  deliveryManId String?     @map("delivery_man_id")

  attachment  Attachment?
  recipient   Recipient   @relation(fields: [recipientId], references: [id])
  deliveryMan User?       @relation(fields: [deliveryManId], references: [id])

  @@map("orders")
}

model Attachment {
  id      String  @id @default(uuid())
  title   String
  url     String
  orderId String? @unique @map("order_id")

  order Order? @relation(fields: [orderId], references: [id])

  @@map("attachments")
}
